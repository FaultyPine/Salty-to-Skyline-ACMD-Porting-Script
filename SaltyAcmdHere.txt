// Dark Samus Jab 1
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_11", "game_attack11", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(2);
		if (acmd->is_excute()) {
			// Pop up hitboxes
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 3.5, /*Angle*/ 70, /*KBG*/ 40, /*FKB*/ 0, /*BKB*/ 35, /*Size*/ 2.5, /*X*/ 0.0, /*Y*/ 4.0, /*Z*/ 9.0, /*X2*/ 0.0, /*Y2*/ 4.0, /*Z2*/ 16.5, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA_d, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 3.5, /*Angle*/ 70, /*KBG*/ 40, /*FKB*/ 0, /*BKB*/ 35, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 10.0, /*Z*/ 9.0, /*X2*/ 0.0, /*Y2*/ 10.0, /*Z2*/ 16.5, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA_d, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			// Locking Hitboxes
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 3.5, /*Angle*/ 361, /*KBG*/ 10, /*FKB*/ 0, /*BKB*/ 25, /*Size*/ 2.5, /*X*/ 0.0, /*Y*/ 4.0, /*Z*/ 9.0, /*X2*/ 0.0, /*Y2*/ 4.0, /*Z2*/ 16.5, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 3.5, /*Angle*/ 361, /*KBG*/ 10, /*FKB*/ 0, /*BKB*/ 25, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 10.0, /*Z*/ 9.0, /*X2*/ 0.0, /*Y2*/ 10.0, /*Z2*/ 16.5, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			AttackModule::set_add_reaction_frame(acmd->module_accessor, /*ID*/ 0, /*Frames*/ 4, /*Unk*/ false);
			AttackModule::set_add_reaction_frame(acmd->module_accessor, /*ID*/ 1, /*Frames*/ 4, /*Unk*/ false);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_ENABLE_COMBO);
		}
		acmd->frame(12);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_ENABLE_RESTART);
		}
	}),
	
	// Dark Samus Jab 2
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_12", "game_attack12", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(0);
		if (acmd->is_excute()) {
			MotionModule::set_rate(acmd->module_accessor, 1.667);
		}
		acmd->frame(4);
		if (acmd->is_excute()) {
			MotionModule::set_rate(acmd->module_accessor, 1.0);
		}
		acmd->frame(5);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 8.0, /*Angle*/ 69, /*KBG*/ 50, /*FKB*/ 0, /*BKB*/ 57, /*Size*/ 5.0, /*X*/ 5.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 8.0, /*Angle*/ 69, /*KBG*/ 50, /*FKB*/ 0, /*BKB*/ 57, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_PUNCH);
			AttackModule::set_attack_height_all(acmd->module_accessor, ATTACK_HEIGHT_HIGH, false);
		}
		acmd->wait(4);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
	}),
	
	// Dark Samus Ftilt
	// (High)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_s3_hi", "game_attacks3hi", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(6);
		if (acmd->is_excute()) {
			acmd->wrap(HIT_NODE, { L2CValue(hash40("kneer")), L2CValue(HIT_STATUS_XLU) });
			acmd->wrap(HIT_NODE, { L2CValue(hash40("footr")), L2CValue(HIT_STATUS_XLU) });
		}
		acmd->frame(7);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 10.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 11.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 0.6, /*Y*/ 0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 12.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 6.0, /*Y*/ -0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("kneel"), /*Damage*/ 10.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 0.0, /*Y*/ 0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			AttackModule::set_attack_height_all(acmd->module_accessor, ATTACK_HEIGHT_HIGH, false);
		}
		acmd->wait(4);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			HitModule::set_status_all(acmd->module_accessor, HIT_STATUS_NORMAL, 0);
		}
	}),
	// (Mid)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_s3_s", "game_attacks3", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(6);
		if (acmd->is_excute()) {
			acmd->wrap(HIT_NODE, { L2CValue(hash40("kneer")), L2CValue(HIT_STATUS_XLU) });
			acmd->wrap(HIT_NODE, { L2CValue(hash40("footr")), L2CValue(HIT_STATUS_XLU) });
		}
		acmd->frame(7);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 10.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 11.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 0.6, /*Y*/ 0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 12.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 6.0, /*Y*/ -0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("kneel"), /*Damage*/ 10.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 0.0, /*Y*/ 0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
		}
		acmd->wait(4);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			HitModule::set_status_all(acmd->module_accessor, HIT_STATUS_NORMAL, 0);
		}
	}),
	// (Low)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_s3_lw", "game_attacks3lw", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(6);
		if (acmd->is_excute()) {
			acmd->wrap(HIT_NODE, { L2CValue(hash40("kneer")), L2CValue(HIT_STATUS_XLU) });
			acmd->wrap(HIT_NODE, { L2CValue(hash40("footr")), L2CValue(HIT_STATUS_XLU) });
		}
		acmd->frame(7);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 10.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 11.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 0.6, /*Y*/ 0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 12.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 6.0, /*Y*/ -0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("kneel"), /*Damage*/ 10.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 3.5, /*X*/ 0.0, /*Y*/ 0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			AttackModule::set_attack_height_all(acmd->module_accessor, ATTACK_HEIGHT_LOW, false);
		}
		acmd->wait(4);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			HitModule::set_status_all(acmd->module_accessor, HIT_STATUS_NORMAL, 0);
		}
	}),
	
	// Dark Samus Utilt
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_hi3", "game_attackhi3", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(0);
		if (acmd->is_excute()) {
			acmd->wrap(HIT_NODE, { L2CValue(hash40("handr")), L2CValue(HIT_STATUS_XLU) });
			acmd->wrap(HIT_NODE, { L2CValue(hash40("armr")), L2CValue(HIT_STATUS_XLU) });
			acmd->wrap(HIT_NODE, { L2CValue(hash40("handl")), L2CValue(HIT_STATUS_XLU) });
			acmd->wrap(HIT_NODE, { L2CValue(hash40("arml")), L2CValue(HIT_STATUS_XLU) });
			acmd->wrap(HIT_NODE, { L2CValue(hash40("kneer")), L2CValue(HIT_STATUS_XLU) });
		}
		acmd->frame(14);
		if (acmd->is_excute()) {
			//acmd->wrap(HIT_NODE, { L2CValue(hash40("legr")), L2CValue(HIT_STATUS_XLU) });
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 12.5, /*Angle*/ 270, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 46, /*Size*/ 6.3, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_G, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 12.5, /*Angle*/ 270, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 46, /*Size*/ 6.3, /*X*/ 6.0, /*Y*/ -0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_G, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 12.5, /*Angle*/ 40, /*KBG*/ 94, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 6.3, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 12.5, /*Angle*/ 40, /*KBG*/ 94, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 6.3, /*X*/ 6.0, /*Y*/ -0.5, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			AttackModule::set_attack_height_all(acmd->module_accessor, ATTACK_HEIGHT_HIGH, false);
		}
		acmd->frame(18);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			HitModule::set_status_all(acmd->module_accessor, HIT_STATUS_NORMAL, 0);
		}
	}),
	
	// Dark Samus Dtilt
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_lw3", "game_attacklw3", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(5);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 8.0, /*Angle*/ 80, /*KBG*/ 65, /*FKB*/ 0, /*BKB*/ 70, /*Size*/ 3.8, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 0.75, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.4, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BOMB);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 8.0, /*Angle*/ 80, /*KBG*/ 65, /*FKB*/ 0, /*BKB*/ 70, /*Size*/ 7.2, /*X*/ 0.0, /*Y*/ 1.6, /*Z*/ 14.4, /*Hitlag*/ 0.75, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.4, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BOMB);
		}
		acmd->wait(3);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
	}),
	
	// Dark Samus Dash Attack
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_dash", "game_attackdash", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(7);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 10.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 3.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 2.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("shoulderl"), /*Damage*/ 10.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 3.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 2.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("bust"), /*Damage*/ 10.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 2.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 10.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 5.3, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 6.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 4.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("shoulderl"), /*Damage*/ 10.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 2.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("bust"), /*Damage*/ 10.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 5.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 2.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->wait(4);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 6.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 6.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 5.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("shoulderl"), /*Damage*/ 6.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 2.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("bust"), /*Damage*/ 6.0, /*Angle*/ 55, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 2.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->wait(8);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
	}),
	
	// Dark Samus Fsmash
	// (High)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_s4_hi", "game_attacks4hi", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(9);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 13.5, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 13.5, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ -4.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 15.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.0, /*X*/ 8.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_FIRE, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ -4.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 12.0, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.0, /*X*/ 8.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_FIRE, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->wait(6);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
	}),
	// (Mid)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_s4_s", "game_attacks4", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(3);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD);
		}
		acmd->frame(9);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 13.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 13.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ -4.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 15.0, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.0, /*X*/ 8.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_FIRE, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ -4.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 12.0, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.0, /*X*/ 8.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_FIRE, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->wait(6);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
	}),
	// (Low)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_s4_lw", "game_attacks4lw", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(9);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 12.5, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 12.5, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ -4.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 14.5, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.0, /*X*/ 8.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_FIRE, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 30, /*Size*/ 3.3, /*X*/ -4.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_PUNCH, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 12.0, /*Angle*/ 361, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.0, /*X*/ 8.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_FIRE, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->wait(6);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
	}),
	
	// Dark Samus Dsmash
	// (Attack)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_lw4", "game_attacklw4", 
	[] (ACMD* acmd) -> void {
		acmd->frame(3);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD);
		}
		acmd->frame(14);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 15.0, /*Angle*/ 70, /*KBG*/ 108, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 6.5, /*X*/ 0.0, /*Y*/ 5.0, /*Z*/ -11.0, /*X2*/ 0.0, /*Y2*/ 20.0, /*Z2*/ -11.0, /*Hitlag*/ 1.25, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13313725f6, /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 15.0, /*Angle*/ 70, /*KBG*/ 108, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 6.5, /*X*/ 0.0, /*Y*/ 5.0, /*Z*/ 17.0, /*X2*/ 0.0, /*Y2*/ 20.0, /*Z2*/ 17.0, /*Hitlag*/ 1.25, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13313725f6, /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 13.0, /*Angle*/ 70, /*KBG*/ 108, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 4.5, /*Z*/ -9.0, /*X2*/ 0.0, /*Y2*/ 4.5, /*Z2*/ 15.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->wait(11);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			MotionModule::set_rate(acmd->module_accessor, 0.75);
		}
		acmd->frame(69);
		if (acmd->is_excute()) {
			StatusModule::change_status_request_from_script(acmd->module_accessor, FIGHTER_STATUS_KIND_WAIT, 0x0);
		}
	}),
	// (Effect)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_lw4", "effect_attacklw4", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(5);
		if (acmd->is_excute()) {
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("hip")), /*X*/ L2CValue(-2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.5), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue((u64)0x09aee445d1), /*X*/ L2CValue(2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("kneer")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(-0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.70000005), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("footr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0999999), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("armr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("handr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue((u64)0x0954eb78b2), /*X*/ L2CValue(2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(-0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("kneel")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.70000005), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("footl")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0999999), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("arml")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("handl")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
		}
		acmd->frame(13);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_throw_hi")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(0), /*Z*/ L2CValue(-11), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.0), L2CValue(true)});
			acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(0.75) });
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue((u64)0x092a3b5b68), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(0), /*Z*/ L2CValue(-11), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.65), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_down_smoke")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(0), /*Z*/ L2CValue(-11), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.75), L2CValue(true)});
			
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_throw_hi")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(0), /*Z*/ L2CValue(17), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.0), L2CValue(true)});
			acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(0.75) });
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue((u64)0x092a3b5b68), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(0), /*Z*/ L2CValue(17), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.65), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_down_smoke")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(0), /*Z*/ L2CValue(17), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.75), L2CValue(true)});
			
		}
	}),
	// (Effect)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_lw4", "sound_attacklw4", 
	[] (ACMD* acmd) -> void { 
		acmd->frame(9);
		if (acmd->is_excute()) {
			acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_samusd_swing_l")) });
		}
		acmd->frame(13);
		if (acmd->is_excute()) {
			acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_samusd_special_n04")) });
		}
	}),
	
	// Dark Samus Nair
	// Attack
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_n", "game_attackairn", 
    [] (ACMD* acmd) -> void { 
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
		acmd->frame(5);
		for(size_t i = 0; i < 7; i++){
			if (acmd->is_excute()) {
				acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 367, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 45, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 15.0, /*Z*/ 4.1, /*Hitlag*/ 0.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BODY);
				acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 367, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 45, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 15.0, /*Z*/ -4.1, /*Hitlag*/ 0.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BODY);
				acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 367, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 45, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 3.0, /*Z*/ 4.1, /*Hitlag*/ 0.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BODY);
				acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 367, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 45, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 3.0, /*Z*/ -4.1, /*Hitlag*/ 0.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BODY);
			}
			acmd->wait(2);
			if (acmd->is_excute()) {
				AttackModule::clear_all(acmd->module_accessor);
			}
			acmd->wait(2);
		}
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 4.0, /*Angle*/ 48, /*KBG*/ 107, /*FKB*/ 0, /*BKB*/ 46, /*Size*/ 12.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 1.5, /*Hitlag*/ 1.2, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->wait(3);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			MotionModule::set_rate(acmd->module_accessor, 0.5);
		}
		acmd->frame(45);
		if (acmd->is_excute()) {
			WorkModule::off_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
	}),
	
	// Effect
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_n", "effect_attackairn", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(5);
		if (acmd->is_excute()) {
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("hip")), /*X*/ L2CValue(-2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.5), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue((u64)0x09aee445d1), /*X*/ L2CValue(2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("kneer")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(-0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.70000005), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("footr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0999999), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("armr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("handr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue((u64)0x0954eb78b2), /*X*/ L2CValue(2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(-0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("kneel")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.70000005), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("footl")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0999999), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("arml")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("handl")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
		}
		acmd->frame(6);
		for(size_t i = 0; i < 5; i++){
			if (acmd->is_excute()) {
				acmd->wrap(BURN_COLOR, { /*Red*/ L2CValue(0.699999988), /*Green*/ L2CValue(0.200000003), /*Blue*/ L2CValue(1.0), /*Alpha*/ L2CValue(0.699999988) });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(14.7), /*Z*/ L2CValue(4.3), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.23), L2CValue(true)});
				acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(3.0) });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(12.0), /*Z*/ L2CValue(1.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.8), L2CValue(true)});
			}
			acmd->wait(1);
			if (acmd->is_excute()) {
				acmd->wrap(BURN_COLOR_FRAME, { /*Unknown*/ L2CValue(1), /*Red*/ L2CValue(0.699999988), /*Green*/ L2CValue(0.200000003), /*Blue*/ L2CValue(1.0), /*Alpha?*/ L2CValue(0) });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
			}
			acmd->wait(1);
			if (acmd->is_excute()) {
				acmd->wrap(BURN_COLOR_NORMAL, { L2CValue() });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(3.5), /*Z*/ L2CValue(-6.1), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.17), L2CValue(true)});
				acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(3.0) });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(12.0), /*Z*/ L2CValue(1.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.8), L2CValue(true)});
			}
			acmd->wait(1);
			if (acmd->is_excute()) {
				acmd->wrap(FLASH, { /*Red*/ L2CValue(1), /*Green*/ L2CValue(0.699999988), /*Blue*/ L2CValue(1.0), /*Alpha*/ L2CValue(0.5) });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
			}
			acmd->wait(1);
			if (acmd->is_excute()) {
				acmd->wrap(FLASH_FRM, { /*Unknown*/ L2CValue(1), /*Red*/ L2CValue(1), /*Green*/ L2CValue(0.699999988), /*Blue*/ L2CValue(1.0), /*Alpha?*/ L2CValue(0) });
				acmd->wrap(COL_NORMAL, { L2CValue() });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(8.4), /*Z*/ L2CValue(0.2), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.32), L2CValue(true)});
				acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(3.0) });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(12.0), /*Z*/ L2CValue(1.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.8), L2CValue(true)});
			}
			acmd->wait(1);
			
			if (acmd->is_excute()) {
				acmd->wrap(BURN_COLOR, { /*Red*/ L2CValue(0.699999988), /*Green*/ L2CValue(0.200000003), /*Blue*/ L2CValue(1.0), /*Alpha*/ L2CValue(0.699999988) });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
				//acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(1) });
			}
			acmd->wait(1);
			if (acmd->is_excute()) {
				acmd->wrap(BURN_COLOR_FRAME, { /*Unknown*/ L2CValue(1), /*Red*/ L2CValue(0.699999988), /*Green*/ L2CValue(0.200000003), /*Blue*/ L2CValue(1.0), /*Alpha?*/ L2CValue(0) });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(6.2), /*Z*/ L2CValue(5.6), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.2), L2CValue(true)});
				acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(3.0) });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(12.0), /*Z*/ L2CValue(1.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.8), L2CValue(true)});
			}
			acmd->wait(1);
			if (acmd->is_excute()) {
				acmd->wrap(BURN_COLOR_NORMAL, { L2CValue() });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
			}
			acmd->wait(1);
			if (acmd->is_excute()) {
				acmd->wrap(FLASH, { /*Red*/ L2CValue(1), /*Green*/ L2CValue(0.699999988), /*Blue*/ L2CValue(1.0), /*Alpha*/ L2CValue(0.5) });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(16.3), /*Z*/ L2CValue(-6.1), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.15), L2CValue(true)});
				acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(3.0) });
				acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(12.0), /*Z*/ L2CValue(1.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.8), L2CValue(true)});
			}
			acmd->wait(1);
			if (acmd->is_excute()) {
				acmd->wrap(FLASH_FRM, { /*Unknown*/ L2CValue(1), /*Red*/ L2CValue(1), /*Green*/ L2CValue(0.699999988), /*Blue*/ L2CValue(1.0), /*Alpha?*/ L2CValue(0) });
				acmd->wrap(COL_NORMAL, { L2CValue() });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_hit_elec_s")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
				acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
			}
			acmd->wait(1);
		}
		acmd->frame(69);
		if (acmd->is_excute()) {
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_damage_elec")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(14.7), /*Z*/ L2CValue(4.3), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.5), L2CValue(true)});
			acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(2.0) });
			acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Unknown*/ L2CValue(false), /*Unknown*/ L2CValue(true) });
		}
	}),
	// Sound
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_n", "sound_attackairn", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(5);
		for(size_t i = 0; i < 2; i++){
			if (acmd->is_excute()) {
				acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_common_spirits_floor_elec_spark1")) });
			}
			acmd->wait(5);
			if (acmd->is_excute()) {
				acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_common_spirits_floor_elec_spark1")) });
			}
			acmd->wait(5);
		}
		if (acmd->is_excute()) {
			acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_common_spirits_floor_elec_spark1")) });
		}
		acmd->wait(4);
		if (acmd->is_excute()) {
			acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_common_spirits_floor_elec_spark1")) });
		}
		acmd->wait(4);
		if (acmd->is_excute()) {
			acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_common_spirits_floor_elec_spark1")) });
		}
	}),
	
	// Dark Samus Fair [old script]
//    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_f", "game_attackairf", 
//    [] (ACMD* acmd) -> void { 
//		acmd->frame(3);
//		if (acmd->is_excute()) {
//			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
//		}
//		acmd->frame(5);
//		if (acmd->is_excute()) {
//			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 3.0, /*Angle*/ 367, /*KBG*/ 100, /*FKB*/ 25, /*BKB*/ 0, /*Size*/ 6.0, /*X*/ 9.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 0.55, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BOMB);
//			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 3.0, /*Angle*/ 18, /*KBG*/ 100, /*FKB*/ 30, /*BKB*/ 0, /*Size*/ 4.0, /*X*/ 2.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 0.55, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BOMB);
//		}
//		acmd->wait(2);
//		if (acmd->is_excute()) {
//			AttackModule::clear_all(acmd->module_accessor);
//		}
//		for(size_t i = 0; i < 3; i++){
//			acmd->wait(4);
//			if (acmd->is_excute()) {
//				acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 1.6, /*Angle*/ 367, /*KBG*/ 100, /*FKB*/ 35, /*BKB*/ 0, /*Size*/ 6.0, /*X*/ 9.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 0.55, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BOMB);
//				acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 1.6, /*Angle*/ 18, /*KBG*/ 100, /*FKB*/ 40, /*BKB*/ 0, /*Size*/ 4.0, /*X*/ 2.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 0.55, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_F, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BOMB);
//			}
//			acmd->wait(2);
//			if (acmd->is_excute()) {
//				AttackModule::clear_all(acmd->module_accessor);
//			}
//		}
//		acmd->wait(4);
//		if (acmd->is_excute()) {
//			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 6.5, /*Angle*/ 361, /*KBG*/ 140, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.5, /*X*/ 2.0, /*Y*/ 0.0, /*Z*/ 2.0, /*Hitlag*/ 1.3, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BOMB);
//			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 6.5, /*Angle*/ 361, /*KBG*/ 140, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 7.2, /*X*/ 9.0, /*Y*/ 0.0, /*Z*/ 2.0, /*Hitlag*/ 1.3, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_ELEC, /*Type*/ ATTACK_REGION_BOMB);
//		}
//		acmd->wait(2);
//		if (acmd->is_excute()) {
//			AttackModule::clear_all(acmd->module_accessor);
//		}
//		acmd->frame(46);
//		if (acmd->is_excute()) {
//			MotionModule::set_rate(acmd->module_accessor, 1.0);
//			WorkModule::off_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
//		}
//	}),

	// Dark Samus Fair
	// (Attack)
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_f", "game_attackairf", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(3);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
		acmd->frame(7);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("shoulderl"), /*Damage*/ 8.5, /*Angle*/ 64, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 8.5, /*Angle*/ 64, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 5.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ -3.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 8.5, /*Angle*/ 64, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 6.0, /*X*/ 7.0, /*Y*/ 0.0, /*Z*/ -3.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 8.5, /*Angle*/ 64, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 6.0, /*X*/ 7.0, /*Y*/ 0.0, /*Z*/ -3.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->frame(8);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 8.5, /*Angle*/ 64, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 6.0, /*X*/ 0.0, /*Y*/ 15.0, /*Z*/ 9.0, /*X2*/ 0.0, /*Y2*/ 8.5, /*Z2*/ 10.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->frame(10);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 8.5, /*Angle*/ 64, /*KBG*/ 80, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 6.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 3.5, /*X2*/ 0.0, /*Y2*/ 8.5, /*Z2*/ 10.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->frame(11);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
		acmd->frame(33);
		if (acmd->is_excute()) {
			WorkModule::off_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
	}),
	// (Effect)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_f", "effect_attackairf", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(2);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("arml")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("handl")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
		}
		acmd->frame(7);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_attack_arc_b")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(9), /*Z*/ L2CValue(4), /*XRot*/ L2CValue(180), /*YRot*/ L2CValue(-175), /*ZRot*/ L2CValue(90), /*Size?*/ L2CValue(1.35), L2CValue(true)});
			acmd->wrap(LAST_EFFECT_SET_COLOR, { /*R*/ L2CValue(0.1), /*G*/ L2CValue(0.7), /*B*/ L2CValue(3.0) });
			//acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_atk_air_lw")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(9), /*Z*/ L2CValue(4), /*XRot*/ L2CValue(180), /*YRot*/ L2CValue(-175), /*ZRot*/ L2CValue(90), /*Size?*/ L2CValue(1.25), L2CValue(true)});
			acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(1.25) });
		}
		acmd->frame(9);
		if(acmd->is_excute()){
			//acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(1.0) });
		}
	}),
	// (Sound)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_f", "sound_attackairf", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(6);
		if(acmd->is_excute()){
			acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_samusd_swing_m")) });
		}
	}),
	
	// Dark Samus Bair
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_b", "game_attackairb", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(8);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 13.0, /*Angle*/ 38, /*KBG*/ 102, /*FKB*/ 0, /*BKB*/ 42, /*Size*/ 5.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_B, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("legr"), /*Damage*/ 13.0, /*Angle*/ 38, /*KBG*/ 102, /*FKB*/ 0, /*BKB*/ 42, /*Size*/ 4.5, /*X*/ 2.5, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_B, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 13.0, /*Angle*/ 38, /*KBG*/ 102, /*FKB*/ 0, /*BKB*/ 42, /*Size*/ 4.5, /*X*/ 6.5, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_B, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 9.0, /*Angle*/ 361, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 5.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_B, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("legr"), /*Damage*/ 9.0, /*Angle*/ 361, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 4.5, /*X*/ 2.5, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_B, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 9.0, /*Angle*/ 361, /*KBG*/ 90, /*FKB*/ 0, /*BKB*/ 20, /*Size*/ 4.5, /*X*/ 6.5, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_B, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
		}
		acmd->wait(7);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
		acmd->frame(41);
		if (acmd->is_excute()) {
			WorkModule::off_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
	}),
	
	// Dark Samus Uair
	// (Attack)
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_hi", "game_attackairhi", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(1);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
		acmd->frame(2);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 1.5, /*Angle*/ 80, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 90, /*Size*/ 4.0, /*X*/ 4.8, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_G, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 1.5, /*Angle*/ 80, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 90, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_G, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("shoulderl"), /*Damage*/ 1.5, /*Angle*/ 80, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 90, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_G, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("bust"), /*Damage*/ 1.5, /*Angle*/ 80, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 90, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_G, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 4, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 1.5, /*Angle*/ 80, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 80, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_G, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			
			//acmd->ATTACK(/*ID*/ 5, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 1.5, /*Angle*/ 90, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 4.8, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			//acmd->ATTACK(/*ID*/ 6, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 1.5, /*Angle*/ 90, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			//acmd->ATTACK(/*ID*/ 7, /*Part*/ 0, /*Bone*/ hash40("shoulderl"), /*Damage*/ 1.5, /*Angle*/ 90, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			//acmd->ATTACK(/*ID*/ 8, /*Part*/ 0, /*Bone*/ hash40("bust"), /*Damage*/ 1.5, /*Angle*/ 90, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			//acmd->ATTACK(/*ID*/ 9, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 1.5, /*Angle*/ 90, /*KBG*/ 30, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 5, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 1.5, /*Angle*/ 367, /*KBG*/ 70, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 4.8, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 6, /*Part*/ 0, /*Bone*/ hash40("arml"), /*Damage*/ 1.5, /*Angle*/ 367, /*KBG*/ 70, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 7, /*Part*/ 0, /*Bone*/ hash40("shoulderl"), /*Damage*/ 1.5, /*Angle*/ 367, /*KBG*/ 70, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 8, /*Part*/ 0, /*Bone*/ hash40("bust"), /*Damage*/ 1.5, /*Angle*/ 367, /*KBG*/ 70, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 9, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 1.5, /*Angle*/ 367, /*KBG*/ 70, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 4.0, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_A, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_cutup"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_CUTUP, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->frame(9);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			MotionModule::set_rate(acmd->module_accessor, 2.0);
		}
		acmd->frame(21);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			MotionModule::set_rate(acmd->module_accessor, 1.0);
		}
		acmd->frame(22);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("kneer"), /*Damage*/ 10.0, /*Angle*/ 85, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*X2*/ 5.0, /*Y2*/ 0.0, /*Z2*/ 0.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("kneel"), /*Damage*/ 10.0, /*Angle*/ 85, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*X2*/ 5.0, /*Y2*/ 0.0, /*Z2*/ 0.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("hip"), /*Damage*/ 10.0, /*Angle*/ 85, /*KBG*/ 105, /*FKB*/ 0, /*BKB*/ 40, /*Size*/ 5.5, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.1, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_KICK);
		}
		acmd->frame(26);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			MotionModule::set_rate(acmd->module_accessor, 0.625);
		}
		acmd->frame(33);
		if (acmd->is_excute()) {
			WorkModule::off_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
	}),
	// (Effect)
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_hi", "effect_attackairhi", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(1);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("arml")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("handl")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
		}
		acmd->frame(2);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue((u64)0x102d8bb87f), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(3.0), /*Z*/ L2CValue(1.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(160), /*Size?*/ L2CValue(0.4), L2CValue(true)});
			//acmd->wrap(EFFECT_FOLLOW_FLIP, { /*Effect*/ L2CValue(hash40("sys_attack_arc_d")), /*Effect*/ L2CValue(hash40("sys_attack_arc_d")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(1.5), /*Y*/ L2CValue(4.5), /*Z*/ L2CValue(0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(-80), /*ZRot*/ L2CValue(-105), /*Size?*/ L2CValue(0.8), L2CValue(true), L2CValue(EF_FLIP_YZ)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("sys_attack_arc_d")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(1.5), /*Y*/ L2CValue(10.0), /*Z*/ L2CValue(0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(-80), /*ZRot*/ L2CValue(-105), /*Size?*/ L2CValue(0.8), L2CValue(true)});
			acmd->wrap(LAST_EFFECT_SET_RATE, { /*Rate*/ L2CValue(1.5) });
			acmd->wrap(LAST_EFFECT_SET_COLOR, { /*R*/ L2CValue(0.1), /*G*/ L2CValue(0.7), /*B*/ L2CValue(3.0) });
		}
		acmd->frame(8);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_attack_arc_d")), /*Unknown*/ L2CValue(true), /*Unknown*/ L2CValue(true) });
		}
		acmd->frame(16);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("hip")), /*X*/ L2CValue(-2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.5), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue((u64)0x09aee445d1), /*X*/ L2CValue(2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("kneer")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(-0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.70000005), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("footr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0999999), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("armr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("handr")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue((u64)0x0954eb78b2), /*X*/ L2CValue(2.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(-0.5), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("kneel")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.70000005), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("footl")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(2.0999999), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("arml")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT_FOLLOW, { /*Effect*/ L2CValue(hash40("samusd_win3_aura")), /*Bone*/ L2CValue(hash40("handl")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.89999998), L2CValue(true)});
			acmd->wrap(EFFECT, { /*Effect*/ L2CValue(hash40("sys_smash_flash")), /*Bone*/ L2CValue(hash40("toer")), /*X*/ L2CValue(0.0), /*Y*/ L2CValue(0.0), /*Z*/ L2CValue(0.0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(0.6), L2CValue(0), L2CValue(0), L2CValue(0), L2CValue(0), L2CValue(0), L2CValue(0), L2CValue(true)});
		}
		acmd->frame(20);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_FOLLOW_ALPHA, { /*Effect*/ L2CValue(hash40("sys_attack_line")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(0), /*Y*/ L2CValue(5), /*Z*/ L2CValue(0), /*XRot*/ L2CValue(-70), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.1), L2CValue(true), /*Alpha*/ L2CValue(0.75)});
			acmd->wrap(EFFECT_FOLLOW_ALPHA, { /*Effect*/ L2CValue(hash40("sys_attack_line")), /*Bone*/ L2CValue(hash40("top")), /*X*/ L2CValue(4), /*Y*/ L2CValue(5), /*Z*/ L2CValue(2), /*XRot*/ L2CValue(-70), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.1), L2CValue(true), /*Alpha*/ L2CValue(0.75)});
		}
		acmd->frame(22);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_FOLLOW_ALPHA, { /*Effect*/ L2CValue((u64)0x1156ac182a), /*Bone*/ L2CValue(hash40("footr")), /*X*/ L2CValue(0), /*Y*/ L2CValue(0), /*Z*/ L2CValue(0), /*XRot*/ L2CValue(0), /*YRot*/ L2CValue(0), /*ZRot*/ L2CValue(0), /*Size?*/ L2CValue(1.5), L2CValue(true), /*Alpha*/ L2CValue(0.95)});
		}
		acmd->frame(24);
		if(acmd->is_excute()){
			acmd->wrap(EFFECT_OFF_KIND, { /*Effect*/ L2CValue(hash40("sys_attack_line")), /*Unknown*/ L2CValue(true), /*Unknown*/ L2CValue(true) });
		}
	}),
	// (Sound)
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_hi", "sound_attackairhi", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(2);
		if(acmd->is_excute()){
			acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_samusd_swing_s")) });
		}
		acmd->frame(20);
		if(acmd->is_excute()){
			acmd->wrap(PLAY_SE, { /*Sound Effect*/ L2CValue(hash40("se_samusd_swing_m")) });
		}
	}),
	
	// Dark Samus Dair
    ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "attack_air_lw", "game_attackairlw", 
    [] (ACMD* acmd) -> void { 
		acmd->frame(0);
		if (acmd->is_excute()) {
			MotionModule::set_rate(acmd->module_accessor, 1.778);
		}
		acmd->frame(3);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
		acmd->frame(15);
		if (acmd->is_excute()) {
			MotionModule::set_rate(acmd->module_accessor, 1.0);
		}
		acmd->frame(16);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 25, /*Size*/ 4.0, /*X*/ -2.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 361, /*KBG*/ 100, /*FKB*/ 0, /*BKB*/ 25, /*Size*/ 4.0, /*X*/ 4.8, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->frame(18);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 14.0, /*Angle*/ 270, /*KBG*/ 85, /*FKB*/ 0, /*BKB*/ 25, /*Size*/ 4.3, /*X*/ -2.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 14.0, /*Angle*/ 270, /*KBG*/ 85, /*FKB*/ 0, /*BKB*/ 25, /*Size*/ 5.0, /*X*/ 5.2, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->frame(21);
		if (acmd->is_excute()) {
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 67, /*KBG*/ 65, /*FKB*/ 0, /*BKB*/ 45, /*Size*/ 4.3, /*X*/ -2.0, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_PUNCH);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("armr"), /*Damage*/ 10.0, /*Angle*/ 67, /*KBG*/ 65, /*FKB*/ 0, /*BKB*/ 45, /*Size*/ 5.0, /*X*/ 4.8, /*Y*/ 0.0, /*Z*/ 0.0, /*Hitlag*/ 1.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_ON, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_normal"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_L, /*SFXType*/ COLLISION_SOUND_ATTR_KICK, /*Type*/ ATTACK_REGION_PUNCH);
		}
		acmd->frame(26);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
		}
		acmd->frame(33);
		if (acmd->is_excute()) {
			WorkModule::off_flag(acmd->module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
		}
	}),
	
	// Dark Samus - Screw Attack
	// Ground
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "special_hi", "game_specialhi", 
	[] (ACMD* acmd) -> void { 
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_SAMUS_STATUS_SPECIAL_HI_FLAG_DISABLE_LR);
		}
		acmd->frame(3);
		if (acmd->is_excute()) {
			WorkModule::off_flag(acmd->module_accessor, /*Flag*/ FIGHTER_SAMUS_STATUS_SPECIAL_HI_FLAG_DISABLE_LR);
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_SAMUS_STATUS_SPECIAL_HI_FLAG_ACC_X);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 3.0, /*Angle*/ 92, /*KBG*/ 100, /*FKB*/ 200, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 0.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 3.0, /*Angle*/ 105, /*KBG*/ 100, /*FKB*/ 200, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 0.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 0.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 3.0, /*Angle*/ 92, /*KBG*/ 100, /*FKB*/ 200, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 3.0, /*Angle*/ 105, /*KBG*/ 100, /*FKB*/ 200, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->wait(3);
		if (acmd->is_excute()) {
			acmd->wrap(notify_event_msc_cmd, { L2CValue((u64)0x2127e37c07), L2CValue(GROUND_CLIFF_CHECK_KIND_ALWAYS) });
			AttackModule::clear_all(acmd->module_accessor);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 92, /*KBG*/ 100, /*FKB*/ 180, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 98, /*KBG*/ 100, /*FKB*/ 180, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 92, /*KBG*/ 100, /*FKB*/ 80, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 98, /*KBG*/ 100, /*FKB*/ 80, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->frame(11);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_SAMUS_STATUS_SPECIAL_HI_FLAG_DISABLE_LR);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 84, /*KBG*/ 100, /*FKB*/ 100, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 90, /*KBG*/ 100, /*FKB*/ 100, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 84, /*KBG*/ 100, /*FKB*/ 40, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 90, /*KBG*/ 100, /*FKB*/ 40, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->frame(14);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 82, /*KBG*/ 100, /*FKB*/ 40, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 90, /*KBG*/ 100, /*FKB*/ 40, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 82, /*KBG*/ 100, /*FKB*/ 20, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 90, /*KBG*/ 100, /*FKB*/ 20, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 3, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->frame(24);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 2.0, /*Angle*/ 361, /*KBG*/ 189, /*FKB*/ 0, /*BKB*/ 56, /*Size*/ 10.0, /*X*/ 0.0, /*Y*/ 6.5, /*Z*/ 0.0, /*Hitlag*/ 2.5, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 0, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW_FINISH, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			acmd->wrap(notify_event_msc_cmd, { L2CValue((u64)0x2127e37c07), L2CValue(GROUND_CLIFF_CHECK_KIND_ALWAYS_BOTH_SIDES) });
		}
	}),

	// Air
	ACMD("BATTLE_OBJECT_CATEGORY_FIGHTER", "FIGHTER_KIND_SAMUSD", "special_air_hi", "game_specialairhi", 
	[] (ACMD* acmd) -> void { 
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_SAMUS_STATUS_SPECIAL_HI_FLAG_DISABLE_LR);
		}
		acmd->frame(3);
		if (acmd->is_excute()) {
			WorkModule::off_flag(acmd->module_accessor, /*Flag*/ FIGHTER_SAMUS_STATUS_SPECIAL_HI_FLAG_DISABLE_LR);
		}
		acmd->frame(4);
		if (acmd->is_excute()) {
			acmd->wrap(notify_event_msc_cmd, { L2CValue((u64)0x2127e37c07), L2CValue(GROUND_CLIFF_CHECK_KIND_ALWAYS) });
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 93, /*KBG*/ 100, /*FKB*/ 115, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 2, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 96, /*KBG*/ 100, /*FKB*/ 115, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 2, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 93, /*KBG*/ 100, /*FKB*/ 60, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 2, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 96, /*KBG*/ 100, /*FKB*/ 60, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 2, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->frame(10);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 96, /*KBG*/ 100, /*FKB*/ 70, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 2, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 1, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 98, /*KBG*/ 100, /*FKB*/ 70, /*BKB*/ 0, /*Size*/ 3.2, /*X*/ 0.0, /*Y*/ 2.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 2.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 2, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 2, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 96, /*KBG*/ 100, /*FKB*/ 40, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ 5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ 5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 2, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
			acmd->ATTACK(/*ID*/ 3, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 98, /*KBG*/ 100, /*FKB*/ 40, /*BKB*/ 0, /*Size*/ 3.0, /*X*/ 0.0, /*Y*/ 9.0, /*Z*/ -5.0, /*X2*/ 0.0, /*Y2*/ 9.0, /*Z2*/ -5.0, /*Hitlag*/ 0.5, /*SDI*/ 0.5, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ true, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 2, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ (u64)0x13135c5462, /*SFXLevel*/ ATTACK_SOUND_LEVEL_S, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->frame(11);
		if (acmd->is_excute()) {
			WorkModule::on_flag(acmd->module_accessor, /*Flag*/ FIGHTER_SAMUS_STATUS_SPECIAL_HI_FLAG_DISABLE_LR);
		}
		acmd->frame(26);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			acmd->ATTACK(/*ID*/ 0, /*Part*/ 0, /*Bone*/ hash40("top"), /*Damage*/ 1.0, /*Angle*/ 361, /*KBG*/ 239, /*FKB*/ 0, /*BKB*/ 50, /*Size*/ 10.0, /*X*/ 0.0, /*Y*/ 6.5, /*Z*/ 0.0, /*Hitlag*/ 2.0, /*SDI*/ 1.0, /*Clang/Rebound*/ ATTACK_SETOFF_KIND_OFF, /*FacingRestrict*/ ATTACK_LR_CHECK_POS, /*SetWeight*/ false, /*ShieldDamage*/ 3, /*Trip*/ 0.0, /*Rehit*/ 0, /*Reflectable*/ false, /*Absorbable*/ false, /*Flinchless*/ false, /*DisableHitlag*/ false, /*Direct/Indirect*/ true, /*Ground/Air*/ COLLISION_SITUATION_MASK_GA, /*Hitbits*/ COLLISION_CATEGORY_MASK_ALL, /*CollisionPart*/ COLLISION_PART_MASK_ALL, /*FriendlyFire*/ false, /*Effect*/ hash40("collision_attr_elec"), /*SFXLevel*/ ATTACK_SOUND_LEVEL_M, /*SFXType*/ COLLISION_SOUND_ATTR_SAMUSD_SCREW_FINISH, /*Type*/ ATTACK_REGION_BODY);
		}
		acmd->wait(2);
		if (acmd->is_excute()) {
			AttackModule::clear_all(acmd->module_accessor);
			acmd->wrap(notify_event_msc_cmd, { L2CValue((u64)0x2127e37c07), L2CValue(GROUND_CLIFF_CHECK_KIND_ALWAYS_BOTH_SIDES) });
		}
	}),